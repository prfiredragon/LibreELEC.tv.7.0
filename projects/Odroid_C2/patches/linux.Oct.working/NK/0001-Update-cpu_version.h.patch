From dd2be92453edec46c1f5497377319d6bbd4a5b29 Mon Sep 17 00:00:00 2001
From: Jamie Coldhill <wrxtasy@amnet.net.au>
Date: Sun, 2 Oct 2016 20:50:53 +0800
Subject: [PATCH] Update cpu_version.h

---
 include/linux/amlogic/cpu_version.h | 108 +++++++++++++++++++++++++++++++-----
 1 file changed, 93 insertions(+), 15 deletions(-)

diff --git a/include/linux/amlogic/cpu_version.h b/include/linux/amlogic/cpu_version.h
index a075903..d6a1b8c 100644
--- a/include/linux/amlogic/cpu_version.h
+++ b/include/linux/amlogic/cpu_version.h
@@ -46,60 +46,138 @@
 #define MESON_CPU_MAJOR_ID_MG9TV	0x1C
 #define MESON_CPU_MAJOR_ID_M8M2		0x1D
 #define MESON_CPU_MAJOR_ID_GXBB		0x1F
-
+#define MESON_CPU_MAJOR_ID_GXTVBB	0x20
+#define MESON_CPU_MAJOR_ID_GXL		0x21
+#define MESON_CPU_MAJOR_ID_GXM		0x22
+#define MESON_CPU_MAJOR_ID_TXL		0x23
 
 #define MESON_CPU_VERSION_LVL_MAJOR	0
 #define MESON_CPU_VERSION_LVL_MINOR	1
 #define MESON_CPU_VERSION_LVL_PACK	2
 #define MESON_CPU_VERSION_LVL_MISC	3
 #define MESON_CPU_VERSION_LVL_MAX	MESON_CPU_VERSION_LVL_MISC
+extern unsigned int system_serial_low0;
+extern unsigned int system_serial_low1;
+extern unsigned int system_serial_high0;
+extern unsigned int system_serial_high1;
+
 int  meson_cpu_version_init(void);
 #ifdef CONFIG_AML_CPU_VERSION
 int get_meson_cpu_version(int level);
+int arch_big_cpu(int cpu);
 #else
 static inline int get_meson_cpu_version(int level)
 {
 	return -1;
 }
+
+static inline int arch_big_cpu(int cpu)
+{
+	return 0;
+}
 #endif
+
+static inline int get_cpu_type(void)
+{
+	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR);
+}
+
+static inline u32 get_cpu_package(void)
+{
+	unsigned int pk;
+	pk = get_meson_cpu_version(MESON_CPU_VERSION_LVL_PACK) & 0xF0;
+	return pk;
+}
+
+static inline bool package_id_is(unsigned int id)
+{
+	return get_cpu_package() == id;
+}
+
 static inline bool is_meson_m8_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) ==
-		MESON_CPU_MAJOR_ID_M8;
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_M8;
 }
 
 static inline bool is_meson_mtvd_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) ==
-		MESON_CPU_MAJOR_ID_MTVD;
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_MTVD;
 }
 
 static inline bool is_meson_m8b_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) ==
-		MESON_CPU_MAJOR_ID_M8B;
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_M8B;
 }
 
 static inline bool is_meson_m8m2_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) ==
-		MESON_CPU_MAJOR_ID_M8M2;
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_M8M2;
 }
 
 static inline bool is_meson_g9tv_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) ==
-		MESON_CPU_MAJOR_ID_MG9TV;
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_MG9TV;
 }
 
 static inline bool is_meson_gxbb_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) ==
-		MESON_CPU_MAJOR_ID_GXBB;
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_GXBB;
 }
 
-static inline u32 get_cpu_type(void)
+static inline bool is_meson_gxtvbb_cpu(void)
 {
-	return get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR);
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_GXTVBB;
+}
+
+static inline bool is_meson_gxbb_package_905(void)
+{
+	return (get_cpu_type() == MESON_CPU_MAJOR_ID_GXBB) &&
+		(get_cpu_package() != 0x20);
+}
+
+static inline bool is_meson_gxbb_package_905m(void)
+{
+	return (get_cpu_type() == MESON_CPU_MAJOR_ID_GXBB) &&
+		(get_cpu_package() == 0x20);
 }
+
+static inline bool is_meson_gxl_cpu(void)
+{
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_GXL;
+}
+
+static inline bool is_meson_gxl_package_905D(void)
+{
+	return is_meson_gxl_cpu() && package_id_is(0x0);
+}
+static inline bool is_meson_gxl_package_905X(void)
+{
+	return is_meson_gxl_cpu() && package_id_is(0x80);
+}
+
+static inline bool is_meson_gxl_package_905L(void)
+{
+	return is_meson_gxl_cpu() && package_id_is(0xc0);
+}
+
+static inline bool is_meson_gxl_package_905M2(void)
+{
+	return is_meson_gxl_cpu() && package_id_is(0xe0);
+}
+
+static inline bool is_meson_gxm_cpu(void)
+{
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_GXM;
+}
+
+static inline bool is_meson_txl_cpu(void)
+{
+	return get_cpu_type() == MESON_CPU_MAJOR_ID_TXL;
+}
+
+static inline bool cpu_after_eq(unsigned int id)
+{
+	return get_cpu_type() >= id;
+}
+
 #endif
-- 
1.9.1

